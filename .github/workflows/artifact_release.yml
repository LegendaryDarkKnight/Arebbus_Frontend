name: Arebbus APK Build Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-test-artifact:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'  # Using Java 17 for Android SDK compatibility

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'

      - name: Accept Android SDK licenses
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
        shell: bash

      - name: Get dependencies
        run: flutter pub get

      - name: Run Flutter tests
        run: |
          echo "Running Flutter tests..."
          flutter test --coverage --reporter=expanded
          echo "✅ All tests passed!"

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage-${{ github.run_number }}
          path: coverage/
          retention-days: 7
        if: always()

      - name: Test Summary
        run: |
          echo "## 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ✅ All tests passed" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Directory**: test/" >> $GITHUB_STEP_SUMMARY
          echo "- **Coverage Report**: Available in artifacts" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        if: success()

      - name: Test Failure Summary
        run: |
          echo "## 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ❌ Tests failed" >> $GITHUB_STEP_SUMMARY
          echo "- **Action**: Build process stopped due to test failures" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        if: failure()

      - name: Get version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Arebbus version: $VERSION"

      - name: Build release APK
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          APP_NAME: "Arebbus"
          ENVIRONMENT: "production"
        run: |
          flutter build apk --release \
            --dart-define=API_BASE_URL="$API_BASE_URL" \
            --dart-define=APP_NAME="$APP_NAME" \
            --dart-define=ENVIRONMENT="$ENVIRONMENT" \
            --dart-define=BUILD_NUMBER=${{ github.run_number }} \
            --dart-define=GIT_COMMIT=${{ github.sha }} \
            --dart-define=BUILD_VERSION=${{ steps.version.outputs.VERSION }}

      - name: Rename APK
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk \
               build/app/outputs/flutter-apk/arebbus-v${{ steps.version.outputs.VERSION }}-build${{ github.run_number }}.apk

      - name: Generate APK checksum
        id: checksum
        run: |
          APK_PATH="build/app/outputs/flutter-apk/arebbus-v${{ steps.version.outputs.VERSION }}-build${{ github.run_number }}.apk"
          CHECKSUM=$(sha256sum "$APK_PATH" | cut -d ' ' -f 1)
          echo "CHECKSUM=$CHECKSUM" >> $GITHUB_OUTPUT
          echo "APK SHA256: $CHECKSUM"

      - name: Create Release Tag
        id: create_tag
        run: |
          TAG_NAME="v${{ steps.version.outputs.VERSION }}-build${{ github.run_number }}"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
          
          # Create tag using GitHub CLI (more reliable for authentication)
          gh api repos/${{ github.repository }}/git/refs \
            --method POST \
            --field ref="refs/tags/$TAG_NAME" \
            --field sha="${{ github.sha }}"
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.TAG_NAME }}
          release_name: "Arebbus v${{ steps.version.outputs.VERSION }} Build ${{ github.run_number }}"
          body: |
            ## 🚀 Arebbus Release v${{ steps.version.outputs.VERSION }}
            
            ### 📱 Build Information
            - **Version**: ${{ steps.version.outputs.VERSION }}
            - **Build Number**: ${{ github.run_number }}
            - **Git Commit**: ${{ github.sha }}
            - **Build Date**: ${{ github.event.head_commit.timestamp }}
            
            ### 🔒 Security
            - **APK SHA256**: `${{ steps.checksum.outputs.CHECKSUM }}`
            
            ### 🧪 Testing
            - **Tests**: ✅ All tests passed
            - **Coverage**: Coverage report included in build artifacts
            
            ### 📋 What's Changed
            Recent commits in this release:
            ${{ github.event.head_commit.message }}
            
            ### 📥 Installation
            1. Download the APK file below
            2. Enable "Install from Unknown Sources" in your Android settings
            3. Install the APK
            
            ### ⚠️ Note
            This is an automated release generated from the main branch.
          draft: false
          prerelease: false

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/arebbus-v${{ steps.version.outputs.VERSION }}-build${{ github.run_number }}.apk
          asset_name: arebbus-v${{ steps.version.outputs.VERSION }}-build${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: arebbus-apk-v${{ steps.version.outputs.VERSION }}-build${{ github.run_number }}
          path: build/app/outputs/flutter-apk/arebbus-v${{ steps.version.outputs.VERSION }}-build${{ github.run_number }}.apk
          retention-days: 30

      - name: Build Summary
        run: |
          echo "## 🚀 Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **App Version**: ${{ steps.version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Number**: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Git Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **APK Name**: arebbus-v${{ steps.version.outputs.VERSION }}-build${{ github.run_number }}.apk" >> $GITHUB_STEP_SUMMARY
          echo "- **Release Tag**: v${{ steps.version.outputs.VERSION }}-build${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **APK SHA256**: ${{ steps.checksum.outputs.CHECKSUM }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tests**: ✅ All tests passed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📱 **Download Options**:" >> $GITHUB_STEP_SUMMARY
          echo "- From GitHub Releases: [v${{ steps.version.outputs.VERSION }}-build${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.VERSION }}-build${{ github.run_number }})" >> $GITHUB_STEP_SUMMARY
          echo "- From Artifacts section above" >> $GITHUB_STEP_SUMMARY