name: Arebbus Google Play Store Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:
    inputs:
      track:
        description: 'Release track (internal/alpha/beta/production)'
        required: true
        default: 'internal'
        type: choice
        options:
          - internal
          - alpha
          - beta
          - production

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'

      - name: Accept Android SDK licenses
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
        shell: bash

      - name: Get dependencies
        run: flutter pub get

      - name: Get version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Arebbus version: $VERSION"

      - name: Decode Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Build release AAB
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          APP_NAME: "Arebbus"
          ENVIRONMENT: "production"
        run: |
          flutter build appbundle --release \
            --dart-define=API_BASE_URL="$API_BASE_URL" \
            --dart-define=APP_NAME="$APP_NAME" \
            --dart-define=ENVIRONMENT="$ENVIRONMENT" \
            --dart-define=BUILD_NUMBER=${{ github.run_number }} \
            --dart-define=GIT_COMMIT=${{ github.sha }} \
            --dart-define=BUILD_VERSION=${{ steps.version.outputs.VERSION }}

      - name: Setup Google Play Service Account
        run: |
          echo "${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}" > google-play-service-account.json

      - name: Deploy to Google Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: google-play-service-account.json
          packageName: ${{ secrets.ANDROID_PACKAGE_NAME }}
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: ${{ github.event.inputs.track || 'internal' }}
          status: completed
          inAppUpdatePriority: 2
          userFraction: 0.33
          whatsNewDirectory: distribution/whatsnew/
          mappingFile: build/app/outputs/mapping/release/mapping.txt

      - name: Upload AAB as Artifact (backup)
        uses: actions/upload-artifact@v4
        with:
          name: arebbus-aab-v${{ steps.version.outputs.VERSION }}-build${{ github.run_number }}
          path: build/app/outputs/bundle/release/app-release.aab
          retention-days: 90

      - name: Clean up
        if: always()
        run: |
          rm -f android/app/keystore.jks
          rm -f android/key.properties
          rm -f google-play-service-account.json

      - name: Deployment Summary
        run: |
          echo "## ðŸš€ Google Play Store Deployment" >> $GITHUB_STEP_SUMMARY
          echo "- **App Version**: ${{ steps.version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Number**: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Track**: ${{ github.event.inputs.track || 'internal' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“± **AAB file also uploaded as artifact for backup**" >> $GITHUB_STEP_SUMMARY